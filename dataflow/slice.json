{
	"name": "slice",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fromTrensform",
						"type": "DatasetReference"
					},
					"name": "fromTransform"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "toSliceZone",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "toSliceZone",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          User_ID as string,",
				"          Employer_Number as string,",
				"          Creation_date as string,",
				"          Username as string,",
				"          Password as string,",
				"          Level as string,",
				"          TRIAL267 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> fromTransform",
				"fromTransform derive(Month = toInteger(trim(left(toString(right(Creation_date, length(Creation_date)-3)), 2), '()'))) ~> derivedColumn1",
				"derivedColumn1 split(Month < 4,",
				"     Month >= 4,",
				"     disjoint: false) ~> split1@(BeforeMarch, afterMarch)",
				"split1@BeforeMarch sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['BeforeMarchUsers'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@afterMarch sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['AfterMarcusers'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}